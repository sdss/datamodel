{
  "general": {
    "name": "procFimgApo",
    "short": "APO Fiber View Camera processed image",
    "description": "Fiber View Camera is used to image back illuminated metrology and fiducial fibers for fiber positioning feedback.  HDUs within contain centroiding and fiber/robot measurement data.",
    "environments": [
      "FCAM_DATA_N",
      "FCAM_DATA_S"
    ],
    "surveys": [
      {
        "name": "SDSS",
        "long": "Sloan Digital Sky Survey",
        "description": "General SDSS Survey",
        "phase": {
          "name": "Phase-V",
          "id": 5,
          "start": 2020,
          "end": null,
          "active": true
        },
        "id": "sdss",
        "aliases": []
      }
    ],
    "datatype": "FITS",
    "filesize": "31 MB",
    "releases": [
      {
        "name": "WORK",
        "description": "SDSS unreleased data.  Represents any work-in-progress data.",
        "public": false,
        "release_date": "unreleased"
      }
    ],
    "naming_convention": "$FCAM_DATA_N/[MJD]/proc-fimg-fvc1n-[EXPNUM].fits",
    "generated_by": "fliswarm, sep, jaeger, coordio",
    "design": false,
    "vac": false,
    "recommended_science_product": false
  },
  "changelog": {
    "description": "Describes changes to the datamodel product and/or file structure from one release to another",
    "releases": {}
  },
  "releases": {
    "WORK": {
      "template": "$FCAM_DATA_N/[MJD]/proc-fimg-fvc1n-[EXPNUM].fits",
      "example": "60648/proc-fimg-fvc1n-0001.fits",
      "location": "{mjd}/proc-fimg-fvc1n-{expnum}.fits",
      "environment": "FCAM_DATA_N",
      "survey": "SDSS",
      "access": {
        "in_sdss_access": false,
        "path_name": null,
        "path_template": null,
        "path_kwargs": null,
        "access_string": "procFimgApo = $FCAM_DATA_N/{mjd}/proc-fimg-fvc1n-{expnum}.fits"
      },
      "hdus": {
        "hdu0": {
          "name": "PRIMARY",
          "is_image": true,
          "description": "empty",
          "size": "0 bytes",
          "header": [
            {
              "key": "SIMPLE",
              "value": "True",
              "comment": "conforms to FITS standard"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "0",
              "comment": "number of array dimensions"
            },
            {
              "key": "EXTEND",
              "value": "True",
              "comment": ""
            },
            {
              "key": "CHECKSUM",
              "value": "D5bHF5a9D5aED5a9",
              "comment": "HDU checksum updated 2024-12-03T22:50:06"
            },
            {
              "key": "DATASUM",
              "value": "0",
              "comment": "data unit checksum updated 2024-12-03T22:50:06"
            }
          ],
          "columns": null
        },
        "hdu1": {
          "name": "RAW",
          "is_image": true,
          "description": "dark subtracted image data",
          "size": "140 MB",
          "header": [
            {
              "key": "XTENSION",
              "value": "IMAGE",
              "comment": "Image extension"
            },
            {
              "key": "BITPIX",
              "value": "-32",
              "comment": "data type of original image"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "dimension of original image"
            },
            {
              "key": "NAXIS1",
              "value": "6000",
              "comment": "length of original image axis"
            },
            {
              "key": "NAXIS2",
              "value": "6132",
              "comment": "length of original image axis"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "EXTNAME",
              "value": "RAW",
              "comment": "extension name"
            },
            {
              "key": "CAMNAME",
              "value": "fvc1n",
              "comment": "Camera name"
            },
            {
              "key": "VCAM",
              "value": "0.6.1a0",
              "comment": "Version of the camera library"
            },
            {
              "key": "IMAGETYP",
              "value": "object",
              "comment": "The image type of the file"
            },
            {
              "key": "EXPTIME",
              "value": "5.0",
              "comment": "Exposure time of single integration [s]"
            },
            {
              "key": "EXPTIMEN",
              "value": "5.0",
              "comment": "Total exposure time [s]"
            },
            {
              "key": "STACK",
              "value": "1",
              "comment": "Number of stacked frames"
            },
            {
              "key": "STACKFUN",
              "value": "median",
              "comment": "Function used for stacking"
            },
            {
              "key": "TIMESYS",
              "value": "TAI",
              "comment": "Time reference system"
            },
            {
              "key": "SJD",
              "value": "60648",
              "comment": "SDSS custom Julian Day"
            },
            {
              "key": "DATE-OBS",
              "value": "2024-12-03 22:49:39.308572",
              "comment": "Time of the start of the exposure [TAI]"
            },
            {
              "key": "CCDTEMP",
              "value": "-10.0",
              "comment": "Degrees C"
            },
            {
              "key": "BEGX",
              "value": "1000",
              "comment": "Window start pixel in X"
            },
            {
              "key": "BEGY",
              "value": "0",
              "comment": "Window start pixel in Y"
            },
            {
              "key": "ENDX",
              "value": "7000",
              "comment": "Window end pixel in X"
            },
            {
              "key": "EDNY",
              "value": "6132",
              "comment": "Window end pixel in Y"
            },
            {
              "key": "BINX",
              "value": "1",
              "comment": "Binning in X"
            },
            {
              "key": "BINY",
              "value": "1",
              "comment": "Binning in Y"
            },
            {
              "key": "GAIN",
              "value": "0.58",
              "comment": "The CCD gain [e-/ADUs]"
            },
            {
              "key": "READNOIS",
              "value": "10.3",
              "comment": "The CCD read noise [ADUs]"
            },
            {
              "key": "PIXELSC",
              "value": "0.2214",
              "comment": "Scale of unbinned pixel on sky [arcsec/pix]"
            },
            {
              "key": "WCSAXES",
              "value": "2",
              "comment": "Number of coordinate axes"
            },
            {
              "key": "CRPIX1",
              "value": "0.0",
              "comment": "Pixel coordinate of reference point"
            },
            {
              "key": "CRPIX2",
              "value": "0.0",
              "comment": "Pixel coordinate of reference point"
            },
            {
              "key": "CDELT1",
              "value": "1.0",
              "comment": "Coordinate increment at reference point"
            },
            {
              "key": "CDELT2",
              "value": "1.0",
              "comment": "Coordinate increment at reference point"
            },
            {
              "key": "CRVAL1",
              "value": "0.0",
              "comment": "Coordinate value at reference point"
            },
            {
              "key": "CRVAL2",
              "value": "0.0",
              "comment": "Coordinate value at reference point"
            },
            {
              "key": "LATPOLE",
              "value": "90.0",
              "comment": "[deg] Native latitude of celestial pole"
            },
            {
              "key": "MJDREF",
              "value": "0.0",
              "comment": "[d] MJD of fiducial time"
            },
            {
              "key": "OBSERVAT",
              "value": "APO",
              "comment": "Observatory"
            },
            {
              "key": "OBJSYS",
              "value": "Mount",
              "comment": "The TCC objSys"
            },
            {
              "key": "RA",
              "value": "NaN",
              "comment": "Telescope is not tracking the sky"
            },
            {
              "key": "DEC",
              "value": "NaN",
              "comment": "Telescope is not tracking the sky"
            },
            {
              "key": "RADEG",
              "value": "NaN",
              "comment": "Telescope is not tracking the sky"
            },
            {
              "key": "DECDEG",
              "value": "NaN",
              "comment": "Telescope is not tracking the sky"
            },
            {
              "key": "SPA",
              "value": "NaN",
              "comment": "Telescope is not tracking the sky"
            },
            {
              "key": "ROTPOS",
              "value": "0.0",
              "comment": "Rotator request type"
            },
            {
              "key": "BOREOFFX",
              "value": "0.0",
              "comment": "TCC Boresight offset, deg"
            },
            {
              "key": "BOREOFFY",
              "value": "0.0",
              "comment": "TCC Boresight offset, deg"
            },
            {
              "key": "ARCOFFX",
              "value": "0.0",
              "comment": "TCC ObjArcOff, deg"
            },
            {
              "key": "ARCOFFY",
              "value": "0.0",
              "comment": "TCC ObjArcOff, deg"
            },
            {
              "key": "CALOFFX",
              "value": "0.0",
              "comment": "TCC CalibOff, deg"
            },
            {
              "key": "CALOFFY",
              "value": "0.0",
              "comment": "TCC CalibOff, deg"
            },
            {
              "key": "CALOFFR",
              "value": "0.0",
              "comment": "TCC CalibOff, deg"
            },
            {
              "key": "GUIDOFFX",
              "value": "0.0",
              "comment": "TCC GuideOff, deg"
            },
            {
              "key": "GUIDOFFY",
              "value": "0.0",
              "comment": "TCC GuideOff, deg"
            },
            {
              "key": "GUIDOFFR",
              "value": "0.0",
              "comment": "TCC GuideOff, deg"
            },
            {
              "key": "AZ",
              "value": "120.999688",
              "comment": "Azimuth axis pos. (approx, deg)"
            },
            {
              "key": "ALT",
              "value": "29.998697",
              "comment": "Altitude axis pos. (approx, deg)"
            },
            {
              "key": "IPA",
              "value": "0.000207",
              "comment": "Rotator axis pos. (approx, deg)"
            },
            {
              "key": "FOCUS",
              "value": "-0.48",
              "comment": "User-specified focus offset (um)"
            },
            {
              "key": "M1PISTON",
              "value": "0.0",
              "comment": "TCC PrimOrient"
            },
            {
              "key": "M1XTILT",
              "value": "-18.23",
              "comment": "TCC PrimOrient"
            },
            {
              "key": "M1YTILT",
              "value": "-7.9",
              "comment": "TCC PrimOrient"
            },
            {
              "key": "M1XTRAN",
              "value": "-427.17",
              "comment": "TCC PrimOrient"
            },
            {
              "key": "M1YTRAN",
              "value": "-999.0",
              "comment": "TCC PrimOrient"
            },
            {
              "key": "M1ZROT",
              "value": "0.0",
              "comment": "TCC PrimOrient"
            },
            {
              "key": "M2PISTON",
              "value": "4658.79",
              "comment": "SecOrient"
            },
            {
              "key": "M2XTILT",
              "value": "-22.95",
              "comment": "SecOrient"
            },
            {
              "key": "M2YTILT",
              "value": "-16.83",
              "comment": "SecOrient"
            },
            {
              "key": "M2XTRAN",
              "value": "18.75",
              "comment": "SecOrient"
            },
            {
              "key": "M2YTRAN",
              "value": "124.87",
              "comment": "SecOrient"
            },
            {
              "key": "M2ZROT",
              "value": "-31.81",
              "comment": "SecOrient"
            },
            {
              "key": "SCALE",
              "value": "1.0",
              "comment": "User-specified scale factor"
            },
            {
              "key": "FF",
              "value": "0 0 0 0",
              "comment": "FF lamps 1:on 0:0ff"
            },
            {
              "key": "NE",
              "value": "0 0 0 0",
              "comment": "NE lamps 1:on 0:0ff"
            },
            {
              "key": "HGCD",
              "value": "0 0 0 0",
              "comment": "HGCD lamps 1:on 0:0ff"
            },
            {
              "key": "FFS",
              "value": "1 1 1 1 1 1 1 1",
              "comment": "Flatfield Screen 1:closed 0:open"
            },
            {
              "key": "V_APO",
              "value": "4.1.0",
              "comment": "Version of the current apoActor"
            },
            {
              "key": "PRESSURE",
              "value": "21.585",
              "comment": ""
            },
            {
              "key": "WINDD",
              "value": "158.6",
              "comment": ""
            },
            {
              "key": "WINDS",
              "value": "8.9",
              "comment": ""
            },
            {
              "key": "GUSTD",
              "value": "165.1",
              "comment": ""
            },
            {
              "key": "GUSTS",
              "value": "12.0",
              "comment": ""
            },
            {
              "key": "AIRTEMP",
              "value": "0.0",
              "comment": ""
            },
            {
              "key": "DEWPOINT",
              "value": "0.0",
              "comment": ""
            },
            {
              "key": "TRUSTEMP",
              "value": "-22.44",
              "comment": ""
            },
            {
              "key": "HUMIDITY",
              "value": "68.8",
              "comment": ""
            },
            {
              "key": "DUSTA",
              "value": "116681.0",
              "comment": ""
            },
            {
              "key": "DUSTB",
              "value": "1410.0",
              "comment": ""
            },
            {
              "key": "WINDD25M",
              "value": "-999.0",
              "comment": ""
            },
            {
              "key": "WINDS25M",
              "value": "-999.0",
              "comment": ""
            },
            {
              "key": "CARTID",
              "value": "FPS-N",
              "comment": "Cart ID"
            },
            {
              "key": "CONFIGID",
              "value": "17590",
              "comment": "Configuration ID"
            },
            {
              "key": "DESIGNID",
              "value": "-999",
              "comment": "Design ID associated with CONFIGID"
            },
            {
              "key": "FIELDID",
              "value": "-999",
              "comment": "Field ID associated with CONFIGID"
            },
            {
              "key": "RAFIELD",
              "value": "-999.0",
              "comment": "Field right ascension"
            },
            {
              "key": "DECFIELD",
              "value": "-999.0",
              "comment": "Field declination"
            },
            {
              "key": "FIELDPA",
              "value": "0.0",
              "comment": "Field position angle"
            },
            {
              "key": "BIASFILE",
              "value": "",
              "comment": "Bias file associated with this image"
            },
            {
              "key": "FVCITER",
              "value": "1",
              "comment": "FVC iteration"
            },
            {
              "key": "FITRMS",
              "value": "39.699999999999996",
              "comment": "RMS full fit [um]"
            },
            {
              "key": "PERC90",
              "value": "59.2",
              "comment": "90% percentile [um]"
            },
            {
              "key": "FVCREACH",
              "value": "2.4",
              "comment": "Targets that have reached their goal [%]"
            },
            {
              "key": "DARKFILE",
              "value": "/data/fcam/calib/60245/medComb.fits",
              "comment": "Dark frame image"
            },
            {
              "key": "CAPPLIED",
              "value": "False",
              "comment": ""
            },
            {
              "key": "TEMPRTD2",
              "value": "6.92",
              "comment": ""
            },
            {
              "key": "TEMPRTD3",
              "value": "6.720000000000001",
              "comment": ""
            },
            {
              "key": "TEMPT3",
              "value": "8.819544053468427",
              "comment": ""
            },
            {
              "key": "LED1",
              "value": "3.9063692129276406",
              "comment": ""
            },
            {
              "key": "LED2",
              "value": "3.9063692129276406",
              "comment": ""
            },
            {
              "key": "LED3",
              "value": "0.0",
              "comment": ""
            },
            {
              "key": "LED4",
              "value": "0.0",
              "comment": ""
            },
            {
              "key": "FVC_NWRN",
              "value": "8",
              "comment": "number of robots out of measurement spec"
            },
            {
              "key": "FVC_MAXD",
              "value": "0.5",
              "comment": "distance beyond to consider robot out of spec ("
            },
            {
              "key": "FVC_CNTT",
              "value": "nudge",
              "comment": "centroid type used for fitting"
            },
            {
              "key": "FVC_BSIG",
              "value": "3.5",
              "comment": "above background sigma for centroid detection"
            },
            {
              "key": "FVC_MNPX",
              "value": "100",
              "comment": "minimum number of pixels for a valid centroid"
            },
            {
              "key": "FVC_WSIG",
              "value": "0.7",
              "comment": "sigma for winpos centroid algorithm"
            },
            {
              "key": "FVC_WBSZ",
              "value": "3",
              "comment": "box size for winpos centroid algorithm (pix)"
            },
            {
              "key": "FVC_SSIG",
              "value": "5",
              "comment": "sigma for simple centroid algorithm (pix)"
            },
            {
              "key": "FVC_SPLM",
              "value": "19",
              "comment": "box size for simple centroid algorithm (pix)"
            },
            {
              "key": "FVC_RMS",
              "value": "2.364351238449486",
              "comment": "robot rms (mm)"
            },
            {
              "key": "FVC_FRMS",
              "value": "3.3578874315000147",
              "comment": "fiducial rms (mm)"
            },
            {
              "key": "FVC_CRMS",
              "value": "0.03970071790087608",
              "comment": "in-spec (outlier-clipped) robot rms (mm)"
            },
            {
              "key": "FVC_SCL",
              "value": "0.12139374726249774",
              "comment": "FVC model fit scale"
            },
            {
              "key": "FVC_TRAX",
              "value": "98.3735615356791",
              "comment": "FVC model fit X translation"
            },
            {
              "key": "FVC_TRAY",
              "value": "497.64683241231205",
              "comment": "FVC model fit Y translation"
            },
            {
              "key": "FVC_ROT",
              "value": "-146.97214083853748",
              "comment": "FVC model fit rotation (deg)"
            },
            {
              "key": "FVC_ZNRM",
              "value": "330",
              "comment": "ZB normilization factor"
            },
            {
              "key": "FVC_ZB0",
              "value": "2.60103184870427e-05",
              "comment": "zhao-burge transform coeff for polid 0"
            },
            {
              "key": "FVC_ZB1",
              "value": "4.46207641043659e-05",
              "comment": "zhao-burge transform coeff for polid 1"
            },
            {
              "key": "FVC_ZB2",
              "value": "-0.00038878092842947",
              "comment": "zhao-burge transform coeff for polid 2"
            },
            {
              "key": "FVC_ZB3",
              "value": "-2.1903558417753e-05",
              "comment": "zhao-burge transform coeff for polid 3"
            },
            {
              "key": "FVC_ZB4",
              "value": "-4.8889396934813e-06",
              "comment": "zhao-burge transform coeff for polid 4"
            },
            {
              "key": "FVC_ZB5",
              "value": "-5.271552432473e-06",
              "comment": "zhao-burge transform coeff for polid 5"
            },
            {
              "key": "FVC_ZB6",
              "value": "3.02795033417491e-06",
              "comment": "zhao-burge transform coeff for polid 6"
            },
            {
              "key": "FVC_ZB9",
              "value": "0.002016788684095433",
              "comment": "zhao-burge transform coeff for polid 9"
            },
            {
              "key": "FVC_ZB20",
              "value": "8.98399196881668e-05",
              "comment": "zhao-burge transform coeff for polid 20"
            },
            {
              "key": "FVC_ZB27",
              "value": "-1.0403395406807e-07",
              "comment": "zhao-burge transform coeff for polid 27"
            },
            {
              "key": "FVC_ZB28",
              "value": "-4.2434292265829e-06",
              "comment": "zhao-burge transform coeff for polid 28"
            },
            {
              "key": "FVC_ZB29",
              "value": "6.66883060736329e-06",
              "comment": "zhao-burge transform coeff for polid 29"
            },
            {
              "key": "FVC_ZB30",
              "value": "-2.6177317390918e-06",
              "comment": "zhao-burge transform coeff for polid 30"
            },
            {
              "key": "CHECKSUM",
              "value": "ecokhclkeclkeclk",
              "comment": "HDU checksum updated 2024-12-03T22:50:10"
            },
            {
              "key": "DATASUM",
              "value": "3089164017",
              "comment": "data unit checksum updated 2024-12-03T22:50:10"
            }
          ],
          "columns": null
        },
        "hdu2": {
          "name": "POSITIONERTABLE",
          "is_image": false,
          "description": "calibration info related to robot positions in the wok (positionerTable.csv copied from sdss-v's fps_calibrations package)",
          "size": "72 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "149",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "500",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "19",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "POSITIONERTABLE",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "1OHX2N9X1NGX1N9X",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "2528340153",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "site": {
              "name": "site",
              "description": "observatory name (APO or LCO)",
              "type": "char[3]",
              "unit": ""
            },
            "holeID": {
              "name": "holeID",
              "description": "name of wok hole location where robot is installed",
              "type": "char[7]",
              "unit": ""
            },
            "positionerID": {
              "name": "positionerID",
              "description": "unique identifier number for robot",
              "type": "int64",
              "unit": ""
            },
            "robotailID": {
              "name": "robotailID",
              "description": "unique identifier for robotail (fibers) installed in robot",
              "type": "char[8]",
              "unit": ""
            },
            "wokID": {
              "name": "wokID",
              "description": "wok shape profile used",
              "type": "char[11]",
              "unit": ""
            },
            "apSpecID": {
              "name": "apSpecID",
              "description": "do not use!",
              "type": "int64",
              "unit": ""
            },
            "bossSpecID": {
              "name": "bossSpecID",
              "description": "do not use!",
              "type": "int64",
              "unit": ""
            },
            "alphaArmLen": {
              "name": "alphaArmLen",
              "description": "robot alpha arm length",
              "type": "float64",
              "unit": "mm"
            },
            "metX": {
              "name": "metX",
              "description": "x location of metrology fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "metY": {
              "name": "metY",
              "description": "y location of metrology fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "apX": {
              "name": "apX",
              "description": "x location of apogee fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "apY": {
              "name": "apY",
              "description": "y location of apogee fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "bossX": {
              "name": "bossX",
              "description": "x location of boss fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "bossY": {
              "name": "bossY",
              "description": "y location of boss fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "alphaOffset": {
              "name": "alphaOffset",
              "description": "alpha angluar offset between robot's internal zeropoint and externally measured zeropoint",
              "type": "float64",
              "unit": "deg"
            },
            "betaOffset": {
              "name": "betaOffset",
              "description": "beta angluar offset between robot's internal zeropoint and externally measured zeropoint",
              "type": "float64",
              "unit": "deg"
            },
            "dx": {
              "name": "dx",
              "description": "x offset from robot center to wok hole center",
              "type": "float64",
              "unit": "mm"
            },
            "dy": {
              "name": "dy",
              "description": "y offset from robot center to wok hole center",
              "type": "float64",
              "unit": "mm"
            },
            "stdr": {
              "name": "stdr",
              "description": "do not use!",
              "type": "float64",
              "unit": ""
            }
          }
        },
        "hdu3": {
          "name": "WOKCOORDS",
          "is_image": false,
          "description": "calibration info related to robot positions in the wok (wokCoords.csv copied from sdss-v's fps_calibrations package)",
          "size": "78 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "143",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "561",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "18",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "WOKCOORDS",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "T2mAW1j5T1jAT1j3",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "3663825970",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "site": {
              "name": "site",
              "description": "observatory name (APO or LCO)",
              "type": "char[3]",
              "unit": ""
            },
            "holeID": {
              "name": "holeID",
              "description": "name of wok hole location where robot is installed",
              "type": "char[7]",
              "unit": ""
            },
            "wokID": {
              "name": "wokID",
              "description": "wok shape profile used",
              "type": "char[11]",
              "unit": ""
            },
            "holeType": {
              "name": "holeType",
              "description": "Type of thing in this wok hole, one of Fiducial, ApogeeBoss (robot with apogee and boss fiber), or Boss (robot with only boss fiber)",
              "type": "char[10]",
              "unit": ""
            },
            "hexRow": {
              "name": "hexRow",
              "description": "wok hex grid row id",
              "type": "float64",
              "unit": ""
            },
            "hexCol": {
              "name": "hexCol",
              "description": "wok hex grid column id",
              "type": "float64",
              "unit": ""
            },
            "xWok": {
              "name": "xWok",
              "description": "x position of hole in wok coordinates",
              "type": "float64",
              "unit": "mm"
            },
            "yWok": {
              "name": "yWok",
              "description": "y position of hole in wok coordinates",
              "type": "float64",
              "unit": "mm"
            },
            "zWok": {
              "name": "zWok",
              "description": "recommend ignore, z coordinate locations not used",
              "type": "int64",
              "unit": "mm"
            },
            "ix": {
              "name": "ix",
              "description": "x component of unit vector describing robot x axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "iy": {
              "name": "iy",
              "description": "y component of unit vector describing robot x axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "iz": {
              "name": "iz",
              "description": "z component of unit vector describing robot x axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "jx": {
              "name": "jx",
              "description": "x component of unit vector describing robot y axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "jy": {
              "name": "jy",
              "description": "y component of unit vector describing robot y axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "jz": {
              "name": "jz",
              "description": "z component of unit vector describing robot y axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "kx": {
              "name": "kx",
              "description": "x component of unit vector describing robot z axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "ky": {
              "name": "ky",
              "description": "y component of unit vector describing robot z axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "kz": {
              "name": "kz",
              "description": "z component of unit vector describing robot z axis in wok coords",
              "type": "int64",
              "unit": ""
            }
          }
        },
        "hdu4": {
          "name": "FIDUCIALCOORDS",
          "is_image": false,
          "description": "calibration info related to fiducial positions in the wok (fiducialCoords.csv copied from sdss-v's fps_calibrations package)",
          "size": "3 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "57",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "60",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "8",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "FIDUCIALCOORDS",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "NnCANlA3NlAANlA3",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "4251433410",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "site": {
              "name": "site",
              "description": "observatory name (APO or LCO)",
              "type": "char[3]",
              "unit": ""
            },
            "holeID": {
              "name": "holeID",
              "description": "name of wok hole location where robot is installed",
              "type": "char[7]",
              "unit": ""
            },
            "id": {
              "name": "id",
              "description": "unique identifier for fiducial",
              "type": "char[7]",
              "unit": ""
            },
            "xWok": {
              "name": "xWok",
              "description": "x wok location of fiducial",
              "type": "float64",
              "unit": "mm"
            },
            "yWok": {
              "name": "yWok",
              "description": "y wok location of fiducial",
              "type": "float64",
              "unit": "mm"
            },
            "zWok": {
              "name": "zWok",
              "description": "z wok location of fiducial",
              "type": "float64",
              "unit": "mm"
            },
            "col": {
              "name": "col",
              "description": "wok hex column id",
              "type": "float64",
              "unit": ""
            },
            "row": {
              "name": "row",
              "description": "wok hex row id",
              "type": "float64",
              "unit": ""
            }
          }
        },
        "hdu5": {
          "name": "POSITIONERTABLEMEAS",
          "is_image": false,
          "description": "Contains all FVC based robot-fiber measurements.  Merge of POSITIONERTABLE (hdu2), WOKCOORDS (hdu3), POSANGLES (hdu8), and CENTROIDS (hdu9).  Merge is made by matching on holeID, and matching centroids to individual robot metrology fibers.",
          "size": "410 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "841",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "500",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "106",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "POSITIONERTABLEMEAS",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "j7eWk7bVj7bVj7bV",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "379766108",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "holeID": {
              "name": "holeID",
              "description": "name of wok hole location where robot is installed",
              "type": "char[7]",
              "unit": ""
            },
            "positionerID": {
              "name": "positionerID",
              "description": "unique identifier number for robot",
              "type": "int64",
              "unit": ""
            },
            "robotailID": {
              "name": "robotailID",
              "description": "unique identifier for robotail (fibers) installed in robot",
              "type": "char[8]",
              "unit": ""
            },
            "wokID_x": {
              "name": "wokID",
              "description": "wok shape profile used",
              "type": "char[11]",
              "unit": ""
            },
            "apSpecID": {
              "name": "apSpecID",
              "description": "do not use!",
              "type": "int64",
              "unit": ""
            },
            "bossSpecID": {
              "name": "bossSpecID",
              "description": "do not use!",
              "type": "int64",
              "unit": ""
            },
            "alphaArmLen": {
              "name": "alphaArmLen",
              "description": "robot alpha arm length",
              "type": "float64",
              "unit": "mm"
            },
            "metX": {
              "name": "metX",
              "description": "x location of metrology fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "metY": {
              "name": "metY",
              "description": "y location of metrology fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "apX": {
              "name": "apX",
              "description": "x location of apogee fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "apY": {
              "name": "apY",
              "description": "y location of apogee fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "bossX": {
              "name": "bossX",
              "description": "x location of boss fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "bossY": {
              "name": "bossY",
              "description": "y location of boss fiber in beta arm (non-rotating) frame",
              "type": "float64",
              "unit": "mm"
            },
            "alphaOffset": {
              "name": "alphaOffset",
              "description": "alpha angluar offset between robot's internal zeropoint and externally measured zeropoint",
              "type": "float64",
              "unit": "deg"
            },
            "betaOffset": {
              "name": "betaOffset",
              "description": "beta angluar offset between robot's internal zeropoint and externally measured zeropoint",
              "type": "float64",
              "unit": "deg"
            },
            "dx": {
              "name": "dx",
              "description": "x offset from robot center to wok hole center",
              "type": "float64",
              "unit": "mm"
            },
            "dy": {
              "name": "dy",
              "description": "y offset from robot center to wok hole center",
              "type": "float64",
              "unit": "mm"
            },
            "stdr": {
              "name": "stdr",
              "description": "not used",
              "type": "float64",
              "unit": ""
            },
            "wokID_y": {
              "name": "wokID",
              "description": "wok shape profile used, same as wokID_x",
              "type": "char[11]",
              "unit": ""
            },
            "holeType": {
              "name": "holeType",
              "description": "Type of thing in this wok hole, one of Fiducial, ApogeeBoss (robot with apogee and boss fiber), or Boss (robot with only boss fiber)",
              "type": "char[10]",
              "unit": ""
            },
            "hexRow": {
              "name": "hexRow",
              "description": "wok hex grid row id",
              "type": "float64",
              "unit": ""
            },
            "hexCol": {
              "name": "hexCol",
              "description": "wok hex grid column id",
              "type": "float64",
              "unit": ""
            },
            "xWok": {
              "name": "xWok",
              "description": "x position of hole in wok coordinates",
              "type": "float64",
              "unit": "mm"
            },
            "yWok": {
              "name": "yWok",
              "description": "y position of hole in wok coordinates",
              "type": "float64",
              "unit": "mm"
            },
            "zWok": {
              "name": "zWok",
              "description": "recommend ignore, z coordinate locations not used",
              "type": "int64",
              "unit": "mm"
            },
            "ix": {
              "name": "ix",
              "description": "x component of unit vector describing robot x axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "iy": {
              "name": "iy",
              "description": "y component of unit vector describing robot x axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "iz": {
              "name": "iz",
              "description": "z component of unit vector describing robot x axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "jx": {
              "name": "jx",
              "description": "x component of unit vector describing robot y axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "jy": {
              "name": "jy",
              "description": "y component of unit vector describing robot y axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "jz": {
              "name": "jz",
              "description": "z component of unit vector describing robot y axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "kx": {
              "name": "kx",
              "description": "x component of unit vector describing robot z axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "ky": {
              "name": "ky",
              "description": "y component of unit vector describing robot z axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "kz": {
              "name": "kz",
              "description": "z component of unit vector describing robot z axis in wok coords",
              "type": "int64",
              "unit": ""
            },
            "alphaReport": {
              "name": "alphaReport",
              "description": "alpha angle reported by robot firmware",
              "type": "float64",
              "unit": "deg"
            },
            "betaReport": {
              "name": "betaReport",
              "description": "beta angle reported by robot firmware",
              "type": "float64",
              "unit": "deg"
            },
            "xWokReportMetrology": {
              "name": "xWokReportMetrology",
              "description": "expected x wok coordinate of metrology fiber given reported alpha/beta angles",
              "type": "float64",
              "unit": "mm"
            },
            "yWokReportMetrology": {
              "name": "yWokReportMetrology",
              "description": "expected y wok coordinate of metrology fiber given reported alpha/beta angles",
              "type": "float64",
              "unit": "mm"
            },
            "xWokReportAPOGEE": {
              "name": "xWokReportAPOGEE",
              "description": "expected x wok coordinate of apogee fiber given reported alpha/beta angles.",
              "type": "float64",
              "unit": "mm"
            },
            "yWokReportAPOGEE": {
              "name": "yWokReportAPOGEE",
              "description": "expected y wok coordinate of apogee fiber given reported alpha/beta angles.",
              "type": "float64",
              "unit": "mm"
            },
            "xWokReportBOSS": {
              "name": "xWokReportBOSS",
              "description": "expected x wok coordinate of boss fiber given reported alpha/beta angles.",
              "type": "float64",
              "unit": "mm"
            },
            "yWokReportBOSS": {
              "name": "yWokReportBOSS",
              "description": "expected y wok coordinate of boss fiber given reported alpha/beta angles.",
              "type": "float64",
              "unit": "mm"
            },
            "thresh": {
              "name": "thresh",
              "description": "threshold at centroid location (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "npix": {
              "name": "npix",
              "description": "number of pixels belonging to centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "tnpix": {
              "name": "tnpix",
              "description": "number of pixels above threshold (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xmin": {
              "name": "xmin",
              "description": "min x coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xmax": {
              "name": "xmax",
              "description": "max x coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ymin": {
              "name": "ymin",
              "description": "min y coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ymax": {
              "name": "ymax",
              "description": "max y coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "x": {
              "name": "x",
              "description": "x center of centroid (first moment, sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix"
            },
            "y": {
              "name": "y",
              "description": "y center of centroid (first moment, sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix"
            },
            "x2": {
              "name": "x2",
              "description": "x second moment (variance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "y2": {
              "name": "y2",
              "description": "y second moment (variance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "xy": {
              "name": "xy",
              "description": "xy second moment (covariance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "errx2": {
              "name": "errx2",
              "description": "x second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "erry2": {
              "name": "erry2",
              "description": "y second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "errxy": {
              "name": "errxy",
              "description": "xy second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "a": {
              "name": "a",
              "description": "elipse parameter a (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "b": {
              "name": "b",
              "description": "elipse parameter b (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "theta": {
              "name": "theta",
              "description": "elipse parameter theta (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cxx": {
              "name": "cxx",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cyy": {
              "name": "cyy",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cxy": {
              "name": "cxy",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cflux": {
              "name": "cflux",
              "description": "sum of member pixels in convolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "flux": {
              "name": "flux",
              "description": "sum of member pixels in unconvolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "cpeak": {
              "name": "cpeak",
              "description": "peak value in convolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "peak": {
              "name": "peak",
              "description": "peak value in unconvolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "xcpeak": {
              "name": "xcpeak",
              "description": "x coordinate of convolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ycpeak": {
              "name": "ycpeak",
              "description": "y coordinate of convolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xpeak": {
              "name": "xpeak",
              "description": "x coordinate of unconvolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ypeak": {
              "name": "ypeak",
              "description": "y coordinate of unconvolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "flag": {
              "name": "flag",
              "description": "centroid extraction flags (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": ""
            },
            "xFlex": {
              "name": "xFlex",
              "description": "x centroid location after adjusting for FVC flexure.",
              "type": "float64",
              "unit": "pix"
            },
            "yFlex": {
              "name": "yFlex",
              "description": "y centroid location after adjusting for FVC flexure.",
              "type": "float64",
              "unit": "pix"
            },
            "rm": {
              "name": "rm",
              "description": "distance of flex correction",
              "type": "float64",
              "unit": "pix"
            },
            "xcirc": {
              "name": "xcirc",
              "description": "x pixel center of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "ycirc": {
              "name": "ycirc",
              "description": "y pixel center of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "rcirc": {
              "name": "rcirc",
              "description": "radius of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "xNudge": {
              "name": "xNudge",
              "description": "x pixel location after applying nudge model",
              "type": "float64",
              "unit": "pix"
            },
            "yNudge": {
              "name": "yNudge",
              "description": "y pixel location after applying nudge model",
              "type": "float64",
              "unit": "pix"
            },
            "outerNudge": {
              "name": "outerNudge",
              "description": "separate nudge model applied to outer fiducials",
              "type": "bool",
              "unit": ""
            },
            "xSimple": {
              "name": "xSimple",
              "description": "x centroid location using upsampled epsf coorelation",
              "type": "float64",
              "unit": "pix"
            },
            "ySimple": {
              "name": "ySimple",
              "description": "y centroid location using upsampled epsf coorelation",
              "type": "float64",
              "unit": "pix"
            },
            "xRot": {
              "name": "xRot",
              "description": "x centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yRot": {
              "name": "yRot",
              "description": "y centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xSimpleRot": {
              "name": "xSimpleRot",
              "description": "xSimple centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "ySimpleRot": {
              "name": "ySimpleRot",
              "description": "ySimple centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xFlexRot": {
              "name": "xFlexRot",
              "description": "xFlex centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yFlexRot": {
              "name": "yFlexRot",
              "description": "yFlex centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xNudgeRot": {
              "name": "xNudgeRot",
              "description": "xNudge centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yNudgeRot": {
              "name": "yNudgeRot",
              "description": "yNudge centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "centroidID": {
              "name": "centroidID",
              "description": "unique ID for each centroid detected in FVC frame",
              "type": "int64",
              "unit": ""
            },
            "xWokMeasMetrology": {
              "name": "xWokMeasMetrology",
              "description": "x wok measured location of metrology fiber after applying fiducial-based ccd to wok FVC transform.",
              "type": "float64",
              "unit": "mm"
            },
            "yWokMeasMetrology": {
              "name": "yWokMeasMetrology",
              "description": "x wok measured location of metrology fiber after applying fiducial-based ccd to wok FVC transform.",
              "type": "float64",
              "unit": "mm"
            },
            "wokErr": {
              "name": "wokErr",
              "description": "distance between expected and measured wok location of metrology fiber",
              "type": "float64",
              "unit": "mm"
            },
            "wokErrWarn": {
              "name": "wokErrWarn",
              "description": "true if wokErr is above some threshold",
              "type": "bool",
              "unit": ""
            },
            "xWokAdjMetrology": {
              "name": "xWokAdjMetrology",
              "description": "no longer used (should be 0)",
              "type": "float64",
              "unit": "mm"
            },
            "yWokAdjMetrology": {
              "name": "yWokAdjMetrology",
              "description": "no longer used (should be 0)",
              "type": "float64",
              "unit": "mm"
            },
            "alphaMeas": {
              "name": "alphaMeas",
              "description": "measured alpha angle of robot derived from FVC measurement of metrology fiber",
              "type": "float64",
              "unit": "deg"
            },
            "betaMeas": {
              "name": "betaMeas",
              "description": "measured beta angle of robot derived from FVC measurement of metrology fiber",
              "type": "float64",
              "unit": "deg"
            },
            "xWokMeasAPOGEE": {
              "name": "xWokMeasAPOGEE",
              "description": "x wok location of apogee fiber derived from measured alpha/beta angles of robot.",
              "type": "float64",
              "unit": "mm"
            },
            "yWokMeasAPOGEE": {
              "name": "yWokMeasAPOGEE",
              "description": "y wok location of apogee fiber derived from measured alpha/beta angles of robot.",
              "type": "float64",
              "unit": "mm"
            },
            "xWokMeasBOSS": {
              "name": "xWokMeasBOSS",
              "description": "x wok location of boss fiber derived from measured alpha/beta angles of robot",
              "type": "float64",
              "unit": "mm"
            },
            "yWokMeasBOSS": {
              "name": "yWokMeasBOSS",
              "description": "x wok location of boss fiber derived from measured alpha/beta angles of robot",
              "type": "float64",
              "unit": "mm"
            },
            "xFVC": {
              "name": "xFVC",
              "description": "x location used for center of FVC centroid for constructing fvc pixel to mm transform.",
              "type": "float64",
              "unit": "pix"
            },
            "yFVC": {
              "name": "yFVC",
              "description": "x location used for center of FVC centroid for constructing fvc pixel to mm transform.",
              "type": "float64",
              "unit": "pix"
            }
          }
        },
        "hdu6": {
          "name": "FIDUCIALCOORDSMEAS",
          "is_image": false,
          "description": "Contains all FVC based fiducial fiber measurements.  Merge of FIDUCIALCOORDS (hdu4) and CENTROIDS (hdu9).  Merge is made by matching centroids to individual fiducial fibers.",
          "size": "28 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "491",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "60",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "64",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "FIDUCIALCOORDSMEAS",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "FEIhF99gFCGgF99g",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "857024602",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "site": {
              "name": "site",
              "description": "observatory name (APO or LCO)",
              "type": "char[3]",
              "unit": ""
            },
            "holeID": {
              "name": "holeID",
              "description": "name of wok hole location where robot is installed",
              "type": "char[7]",
              "unit": ""
            },
            "id": {
              "name": "id",
              "description": "unique identifier for fiducial",
              "type": "char[7]",
              "unit": ""
            },
            "xWok": {
              "name": "xWok",
              "description": "x wok location of fiducial",
              "type": "float64",
              "unit": "mm"
            },
            "yWok": {
              "name": "yWok",
              "description": "y wok location of fiducial",
              "type": "float64",
              "unit": "mm"
            },
            "zWok": {
              "name": "zWok",
              "description": "z wok location of fiducial",
              "type": "float64",
              "unit": "mm"
            },
            "col": {
              "name": "col",
              "description": "wok hex column id",
              "type": "float64",
              "unit": ""
            },
            "row": {
              "name": "row",
              "description": "wok hex row id",
              "type": "float64",
              "unit": ""
            },
            "thresh": {
              "name": "thresh",
              "description": "threshold at centroid location (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "npix": {
              "name": "npix",
              "description": "number of pixels belonging to centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "tnpix": {
              "name": "tnpix",
              "description": "number of pixels above threshold (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xmin": {
              "name": "xmin",
              "description": "min x coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xmax": {
              "name": "xmax",
              "description": "max x coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ymin": {
              "name": "ymin",
              "description": "min y coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ymax": {
              "name": "ymax",
              "description": "max y coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "x": {
              "name": "x",
              "description": "x center of centroid (first moment, sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix"
            },
            "y": {
              "name": "y",
              "description": "y center of centroid (first moment, sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix"
            },
            "x2": {
              "name": "x2",
              "description": "x second moment (variance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "y2": {
              "name": "y2",
              "description": "y second moment (variance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "xy": {
              "name": "xy",
              "description": "xy second moment (covariance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "errx2": {
              "name": "errx2",
              "description": "x second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "erry2": {
              "name": "erry2",
              "description": "y second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "errxy": {
              "name": "errxy",
              "description": "xy second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "a": {
              "name": "a",
              "description": "elipse parameter a (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "b": {
              "name": "b",
              "description": "elipse parameter b (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "theta": {
              "name": "theta",
              "description": "elipse parameter theta (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cxx": {
              "name": "cxx",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cyy": {
              "name": "cyy",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cxy": {
              "name": "cxy",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cflux": {
              "name": "cflux",
              "description": "sum of member pixels in convolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "flux": {
              "name": "flux",
              "description": "sum of member pixels in unconvolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "cpeak": {
              "name": "cpeak",
              "description": "peak value in convolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "peak": {
              "name": "peak",
              "description": "peak value in unconvolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "xcpeak": {
              "name": "xcpeak",
              "description": "x coordinate of convolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ycpeak": {
              "name": "ycpeak",
              "description": "y coordinate of convolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xpeak": {
              "name": "xpeak",
              "description": "x coordinate of unconvolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ypeak": {
              "name": "ypeak",
              "description": "y coordinate of unconvolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "flag": {
              "name": "flag",
              "description": "centroid extraction flags (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": ""
            },
            "xFlex": {
              "name": "xFlex",
              "description": "x centroid location after adjusting for FVC flexure.",
              "type": "float64",
              "unit": "pix"
            },
            "yFlex": {
              "name": "yFlex",
              "description": "y centroid location after adjusting for FVC flexure.",
              "type": "float64",
              "unit": "pix"
            },
            "rm": {
              "name": "rm",
              "description": "distance of flex correction",
              "type": "float64",
              "unit": "pix"
            },
            "xcirc": {
              "name": "xcirc",
              "description": "x pixel center of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "ycirc": {
              "name": "ycirc",
              "description": "y pixel center of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "rcirc": {
              "name": "rcirc",
              "description": "radius of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "xNudge": {
              "name": "xNudge",
              "description": "x pixel location after applying nudge model",
              "type": "float64",
              "unit": "pix"
            },
            "yNudge": {
              "name": "yNudge",
              "description": "y pixel location after applying nudge model",
              "type": "float64",
              "unit": "pix"
            },
            "outerNudge": {
              "name": "outerNudge",
              "description": "separate nudge model applied to outer fiducials",
              "type": "bool",
              "unit": ""
            },
            "xSimple": {
              "name": "xSimple",
              "description": "x centroid location using upsampled epsf coorelation",
              "type": "float64",
              "unit": "pix"
            },
            "ySimple": {
              "name": "ySimple",
              "description": "y centroid location using upsampled epsf coorelation",
              "type": "float64",
              "unit": "pix"
            },
            "xRot": {
              "name": "xRot",
              "description": "x centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yRot": {
              "name": "yRot",
              "description": "y centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xSimpleRot": {
              "name": "xSimpleRot",
              "description": "xSimple centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "ySimpleRot": {
              "name": "ySimpleRot",
              "description": "ySimple centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xFlexRot": {
              "name": "xFlexRot",
              "description": "xFlex centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yFlexRot": {
              "name": "yFlexRot",
              "description": "yFlex centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xNudgeRot": {
              "name": "xNudgeRot",
              "description": "xNudge centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yNudgeRot": {
              "name": "yNudgeRot",
              "description": "yNudge centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "centroidID": {
              "name": "centroidID",
              "description": "unique ID for each centroid detected in FVC frame",
              "type": "int64",
              "unit": ""
            },
            "xWokMeas": {
              "name": "xWokMeas",
              "description": "x wok measured location of fiducial fiber after applying fiducial-based ccd to wok FVC transform.",
              "type": "float64",
              "unit": "mm"
            },
            "yWokMeas": {
              "name": "yWokMeas",
              "description": "x wok measured location of fiducial fiber after applying fiducial-based ccd to wok FVC transform.",
              "type": "float64",
              "unit": "mm"
            },
            "wokErr": {
              "name": "wokErr",
              "description": "distance between expected and measured wok location of fiducial fiber",
              "type": "float64",
              "unit": "mm"
            },
            "wokErrWarn": {
              "name": "wokErrWarn",
              "description": "true if wokErr is above some threshold",
              "type": "bool",
              "unit": ""
            },
            "xFVC": {
              "name": "xFVC",
              "description": "x location used for center of FVC centroid for constructing fvc pixel to mm transform.",
              "type": "float64",
              "unit": "pix"
            },
            "yFVC": {
              "name": "yFVC",
              "description": "x location used for center of FVC centroid for constructing fvc pixel to mm transform.",
              "type": "float64",
              "unit": "pix"
            }
          }
        },
        "hdu7": {
          "name": "FIBERDATA",
          "is_image": false,
          "description": "Information for each FPS fibre in a given configuration",
          "size": "394 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "269",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "1500",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "48",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "FIBERDATA",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "7AodA0oZ07od77oZ",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "162695430",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "index": {
              "name": "index",
              "description": "Row index",
              "type": "int32",
              "unit": ""
            },
            "positioner_id": {
              "name": "positioner_id",
              "description": "The robotic fibre positioner identifier",
              "type": "int32",
              "unit": ""
            },
            "fibre_type": {
              "name": "fibre_type",
              "description": "rType of fibre in this entry (APOGEE, BOSS, or Metrology)",
              "type": "char[9]",
              "unit": ""
            },
            "hole_id": {
              "name": "hole_id",
              "description": "Hole identifier in which the positioner is located",
              "type": "char[7]",
              "unit": ""
            },
            "fibre_id": {
              "name": "fibre_id",
              "description": "Sequential ID of the fibre in the spectrograph slit",
              "type": "float64",
              "unit": ""
            },
            "site": {
              "name": "site",
              "description": "Observatory name (APO or LCO)",
              "type": "char[3]",
              "unit": ""
            },
            "assigned": {
              "name": "assigned",
              "description": "Whether this fibre is assigned to a target",
              "type": "bool",
              "unit": ""
            },
            "reassigned": {
              "name": "reassigned",
              "description": "Whether the fibre was reassigned after Kaiju decollision",
              "type": "bool",
              "unit": ""
            },
            "valid": {
              "name": "valid",
              "description": "Whether the alpha and beta angles are valid. Do not use targets with valid=0",
              "type": "bool",
              "unit": ""
            },
            "too": {
              "name": "too",
              "description": "Whether this entry is a target of opportunity (ToO). In this case the ToO replaced one of the initial science target assigned by robostrategy. The too entry was introduced in confSummary 14461 at APO and 10007788 at LCO.",
              "type": "bool",
              "unit": ""
            },
            "on_target": {
              "name": "on_target",
              "description": "The fibre is on target (was assigned and it was not replaced or decollided during reconfiguration)",
              "type": "bool",
              "unit": ""
            },
            "disabled": {
              "name": "disabled",
              "description": "The positioner to which this fibre belongs is disabled",
              "type": "bool",
              "unit": ""
            },
            "offline": {
              "name": "offline",
              "description": "The positioner to which this fibre belongs is offline",
              "type": "bool",
              "unit": ""
            },
            "deadlocked": {
              "name": "deadlocked",
              "description": "The positioner to which this fibre belongs is deadlocked",
              "type": "bool",
              "unit": ""
            },
            "decollided": {
              "name": "decollided",
              "description": "The positioner to which this fibre belongs was collided with another robot and one had to be moved",
              "type": "bool",
              "unit": ""
            },
            "dubious": {
              "name": "dubious",
              "description": "The FVC-measured position of this fibre is dubious",
              "type": "bool",
              "unit": ""
            },
            "wavelength": {
              "name": "wavelength",
              "description": "The wavelength at which the target was designed to be observed",
              "type": "float32",
              "unit": "Angstrom"
            },
            "fiberId": {
              "name": "fiberId",
              "description": "Same as fibre_id but with American spelling",
              "type": "float32",
              "unit": ""
            },
            "catalogid": {
              "name": "catalogid",
              "description": "The unique identifier of the target in the target catalog",
              "type": "float64",
              "unit": ""
            },
            "ra_icrs": {
              "name": "ra_icrs",
              "description": "The ICRS right ascension of the target",
              "type": "float64",
              "unit": "deg"
            },
            "dec_icrs": {
              "name": "dec_icrs",
              "description": "The ICRS declination of the target",
              "type": "float64",
              "unit": "deg"
            },
            "pmra": {
              "name": "pmra",
              "description": "Right ascension proper motion from catalogdb.catalog. This is a real, on-sky angle (i.e., the cosine of the declination is included)",
              "type": "float32",
              "unit": "mas/year"
            },
            "pmdec": {
              "name": "pmdec",
              "description": "Declination proper motion from catalogdb.catalog",
              "type": "float32",
              "unit": "mas/year"
            },
            "parallax": {
              "name": "parallax",
              "description": "The parallax of the target",
              "type": "float32",
              "unit": "mas"
            },
            "coord_epoch": {
              "name": "coord_epoch",
              "description": "The epoch of the coordinates in catalogdb.catalog",
              "type": "float32",
              "unit": "year"
            },
            "delta_ra": {
              "name": "delta_ra",
              "description": "Custom offset in right ascension applied to this target. Note that \"ra\", \"dec\", and the \"_observed\" coordinates do take this offset into account.",
              "type": "float32",
              "unit": "arcsec"
            },
            "delta_dec": {
              "name": "delta_dec",
              "description": "Custom offset in declination applied to this target.",
              "type": "float32",
              "unit": "arcsec"
            },
            "ra_offset": {
              "name": "ra_offset",
              "description": "ra_icrs + delta_ra",
              "type": "float64",
              "unit": "deg"
            },
            "dec_offset": {
              "name": "dec_offset",
              "description": "dec_icrs + delta_dec",
              "type": "float64",
              "unit": "deg"
            },
            "ra_epoch": {
              "name": "ra_epoch",
              "description": "Right ascension at the epoch of observation",
              "type": "float64",
              "unit": "deg"
            },
            "dec_epoch": {
              "name": "dec_epoch",
              "description": "Declination at the epoch of observation",
              "type": "float64",
              "unit": "deg"
            },
            "ra_observed": {
              "name": "ra_observed",
              "description": "Topocentric right ascension of the target at the time of observation",
              "type": "float64",
              "unit": "deg"
            },
            "dec_observed": {
              "name": "dec_observed",
              "description": "Topocentric declination of the target at the time of observation",
              "type": "float64",
              "unit": "deg"
            },
            "alt_observed": {
              "name": "alt_observed",
              "description": "Altitude of the target at the time of observation",
              "type": "float64",
              "unit": "deg"
            },
            "az_observed": {
              "name": "az_observed",
              "description": "Azimuth of the target at the time of observation",
              "type": "float64",
              "unit": "deg"
            },
            "xfocal": {
              "name": "xfocal",
              "description": "The X focal plane coordinate. While the focal coordinates are very similar to the wok coordinates, they are not identical since the wok shape does not exactly match the focal plane.",
              "type": "float64",
              "unit": "mm"
            },
            "yfocal": {
              "name": "yfocal",
              "description": "The Y focal plane coordinate.",
              "type": "float64",
              "unit": "mm"
            },
            "xwok": {
              "name": "xwok",
              "description": "The X wok coordinate, measured from the centre of the wok. Calculated from the target ra_icrs and dec_icrs using the system coordinate transformations At APO these coordinates are only available starting on MJD 59584.",
              "type": "float64",
              "unit": "mm"
            },
            "ywok": {
              "name": "ywok",
              "description": "The Y wok coordinate",
              "type": "float64",
              "unit": "mm"
            },
            "zwok": {
              "name": "zwok",
              "description": "The Z wok coordinate",
              "type": "float64",
              "unit": "mm"
            },
            "xwok_kaiju": {
              "name": "xwok_kaiju",
              "description": "The X wok coordinate, measured from the centre of the wok. Calculated by Kaiju from the target alpha and beta angles.",
              "type": "float64",
              "unit": "mm"
            },
            "ywok_kaiju": {
              "name": "ywok_kaiju",
              "description": "The Y wok coordinate reported by Kaiju",
              "type": "float64",
              "unit": "mm"
            },
            "zwok_kaiju": {
              "name": "zwok_kaiju",
              "description": "The Y wok coordinate reported by Kaiju",
              "type": "float64",
              "unit": "mm"
            },
            "xwok_measured": {
              "name": "xwok_measured",
              "description": "The X wok coordinated as measured by the FVC",
              "type": "float64",
              "unit": "mm"
            },
            "ywok_measured": {
              "name": "ywok_measured",
              "description": "The Y wok coordinated as measured by the FVC",
              "type": "float64",
              "unit": "mm"
            },
            "zwok_measured": {
              "name": "zwok_measured",
              "description": "The Z wok coordinated as measured by the FVC",
              "type": "float64",
              "unit": "mm"
            },
            "alpha": {
              "name": "alpha",
              "description": "The alpha angle of the positioner. This value is calculated from the ICRS coordinates of the target by performing all the transformations to positioner coordinates.",
              "type": "float64",
              "unit": "deg"
            },
            "beta": {
              "name": "beta",
              "description": "The beta angle of the positioner.",
              "type": "float64",
              "unit": "deg"
            }
          }
        },
        "hdu8": {
          "name": "POSANGLES",
          "is_image": false,
          "description": "information about robot angular positions before and after move",
          "size": "27 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "56",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "500",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "7",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "POSANGLES",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "6R4A8Q266Q2A6Q25",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "1307844807",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "positionerID": {
              "name": "positionerID",
              "description": "unique identifier number for robot",
              "type": "int64",
              "unit": ""
            },
            "alphaReport": {
              "name": "alphaReport",
              "description": "alpha angle reported by robot firmware",
              "type": "float64",
              "unit": "deg"
            },
            "betaReport": {
              "name": "betaReport",
              "description": "beta angle reported by robot firmware",
              "type": "float64",
              "unit": "deg"
            },
            "cmdAlpha": {
              "name": "cmdAlpha",
              "description": "alpha angle commanded to the robot",
              "type": "float64",
              "unit": "deg"
            },
            "cmdBeta": {
              "name": "cmdBeta",
              "description": "beta angle commanded to the robot",
              "type": "float64",
              "unit": "deg"
            },
            "startAlpha": {
              "name": "startAlpha",
              "description": "alpha angle prior to move command",
              "type": "float64",
              "unit": "deg"
            },
            "startBeta": {
              "name": "startBeta",
              "description": "beta angle prior to move command",
              "type": "float64",
              "unit": "deg"
            }
          }
        },
        "hdu9": {
          "name": "CENTROIDS",
          "is_image": false,
          "description": "centroid measurements for all FVC source detections prior to matching to specific metrology or fiducial fibers.  Most columns correspond to what is returned by sep.extract (https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html).",
          "size": "212 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "393",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "553",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "50",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "CENTROIDS",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "jajokTjljZjljZjl",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "916491492",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "thresh": {
              "name": "thresh",
              "description": "threshold at centroid location (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "npix": {
              "name": "npix",
              "description": "number of pixels belonging to centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "tnpix": {
              "name": "tnpix",
              "description": "number of pixels above threshold (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xmin": {
              "name": "xmin",
              "description": "min x coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xmax": {
              "name": "xmax",
              "description": "max x coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ymin": {
              "name": "ymin",
              "description": "min y coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ymax": {
              "name": "ymax",
              "description": "max y coord of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "x": {
              "name": "x",
              "description": "x center of centroid (first moment, sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix"
            },
            "y": {
              "name": "y",
              "description": "y center of centroid (first moment, sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix"
            },
            "x2": {
              "name": "x2",
              "description": "x second moment (variance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "y2": {
              "name": "y2",
              "description": "y second moment (variance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "xy": {
              "name": "xy",
              "description": "xy second moment (covariance) of centroid (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "errx2": {
              "name": "errx2",
              "description": "x second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "erry2": {
              "name": "erry2",
              "description": "y second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "errxy": {
              "name": "errxy",
              "description": "xy second moment error (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "pix^2"
            },
            "a": {
              "name": "a",
              "description": "elipse parameter a (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "b": {
              "name": "b",
              "description": "elipse parameter b (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "theta": {
              "name": "theta",
              "description": "elipse parameter theta (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cxx": {
              "name": "cxx",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cyy": {
              "name": "cyy",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cxy": {
              "name": "cxy",
              "description": "alternative ellipse parameter (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": ""
            },
            "cflux": {
              "name": "cflux",
              "description": "sum of member pixels in convolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "flux": {
              "name": "flux",
              "description": "sum of member pixels in unconvolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "cpeak": {
              "name": "cpeak",
              "description": "peak value in convolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "peak": {
              "name": "peak",
              "description": "peak value in unconvolved data (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "float64",
              "unit": "adu"
            },
            "xcpeak": {
              "name": "xcpeak",
              "description": "x coordinate of convolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ycpeak": {
              "name": "ycpeak",
              "description": "y coordinate of convolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "xpeak": {
              "name": "xpeak",
              "description": "x coordinate of unconvolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "ypeak": {
              "name": "ypeak",
              "description": "y coordinate of unconvolved peak pixel (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": "pix"
            },
            "flag": {
              "name": "flag",
              "description": "centroid extraction flags (sep extraction output https://sep.readthedocs.io/en/v1.1.x/api/sep.extract.html)",
              "type": "int64",
              "unit": ""
            },
            "xFlex": {
              "name": "xFlex",
              "description": "x centroid location after adjusting for FVC flexure.",
              "type": "float64",
              "unit": "pix"
            },
            "yFlex": {
              "name": "yFlex",
              "description": "y centroid location after adjusting for FVC flexure.",
              "type": "float64",
              "unit": "pix"
            },
            "rm": {
              "name": "rm",
              "description": "distance of flex correction",
              "type": "float64",
              "unit": "pix"
            },
            "xcirc": {
              "name": "xcirc",
              "description": "x pixel center of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "ycirc": {
              "name": "ycirc",
              "description": "y pixel center of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "rcirc": {
              "name": "rcirc",
              "description": "radius of circle fit to outermost fiducials",
              "type": "float64",
              "unit": "pix"
            },
            "xNudge": {
              "name": "xNudge",
              "description": "x pixel location after applying nudge model",
              "type": "float64",
              "unit": "pix"
            },
            "yNudge": {
              "name": "yNudge",
              "description": "y pixel location after applying nudge model",
              "type": "float64",
              "unit": "pix"
            },
            "outerNudge": {
              "name": "outerNudge",
              "description": "separate nudge model applied to outer fiducials",
              "type": "bool",
              "unit": ""
            },
            "xSimple": {
              "name": "xSimple",
              "description": "x centroid location using upsampled epsf coorelation",
              "type": "float64",
              "unit": "pix"
            },
            "ySimple": {
              "name": "ySimple",
              "description": "y centroid location using upsampled epsf coorelation",
              "type": "float64",
              "unit": "pix"
            },
            "xRot": {
              "name": "xRot",
              "description": "x centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yRot": {
              "name": "yRot",
              "description": "y centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xSimpleRot": {
              "name": "xSimpleRot",
              "description": "xSimple centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "ySimpleRot": {
              "name": "ySimpleRot",
              "description": "ySimple centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xFlexRot": {
              "name": "xFlexRot",
              "description": "xFlex centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yFlexRot": {
              "name": "yFlexRot",
              "description": "yFlex centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "xNudgeRot": {
              "name": "xNudgeRot",
              "description": "xNudge centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "yNudgeRot": {
              "name": "yNudgeRot",
              "description": "yNudge centroid center rotated roughly such that xy pixels are aligned with xyWok before performing fiducial matching.",
              "type": "float64",
              "unit": "pix"
            },
            "centroidID": {
              "name": "centroidID",
              "description": "unique ID for each centroid detected in FVC frame",
              "type": "int64",
              "unit": ""
            }
          }
        },
        "hdu10": {
          "name": "OFFSETS",
          "is_image": false,
          "description": "Computed offsets for each fibre based on positioners measured by the FVC",
          "size": "60 KB",
          "header": [
            {
              "key": "XTENSION",
              "value": "BINTABLE",
              "comment": "binary table extension"
            },
            {
              "key": "BITPIX",
              "value": "8",
              "comment": "array data type"
            },
            {
              "key": "NAXIS",
              "value": "2",
              "comment": "number of array dimensions"
            },
            {
              "key": "NAXIS1",
              "value": "124",
              "comment": "length of dimension 1"
            },
            {
              "key": "NAXIS2",
              "value": "500",
              "comment": "length of dimension 2"
            },
            {
              "key": "PCOUNT",
              "value": "0",
              "comment": "number of group parameters"
            },
            {
              "key": "GCOUNT",
              "value": "1",
              "comment": "number of groups"
            },
            {
              "key": "TFIELDS",
              "value": "17",
              "comment": "number of table fields"
            },
            {
              "key": "EXTNAME",
              "value": "OFFSETS",
              "comment": "extension name"
            },
            {
              "key": "CHECKSUM",
              "value": "JTcQLQZOJQbOJQZO",
              "comment": "HDU checksum updated 2024-12-03T22:50:11"
            },
            {
              "key": "DATASUM",
              "value": "1913083360",
              "comment": "data unit checksum updated 2024-12-03T22:50:11"
            }
          ],
          "columns": {
            "positioner_id": {
              "name": "positioner_id",
              "description": "The ID of the positioner",
              "type": "int32",
              "unit": ""
            },
            "alpha_reported": {
              "name": "alpha_reported",
              "description": "The angle of the alpha arm as reported by the positioner firmware",
              "type": "float64",
              "unit": "deg"
            },
            "beta_reported": {
              "name": "beta_reported",
              "description": "The angle of the beta arm as reported by the positioner firmware",
              "type": "float64",
              "unit": "deg"
            },
            "hole_id": {
              "name": "hole_id",
              "description": "The hole in which the positioner is located, in the format 'RXXCYY'",
              "type": "char[7]",
              "unit": ""
            },
            "xwok_distance": {
              "name": "xwok_distance",
              "description": "The x-axis distance between measured and desired positions in wok coordinates",
              "type": "float64",
              "unit": "mm"
            },
            "ywok_distance": {
              "name": "ywok_distance",
              "description": "The y-axis distance between measured and desired positions in wok coordinates",
              "type": "float64",
              "unit": "mm"
            },
            "alpha_expected": {
              "name": "alpha_expected",
              "description": "The desired alpha angle, from the configuration data",
              "type": "float64",
              "unit": "deg"
            },
            "beta_expected": {
              "name": "beta_expected",
              "description": "The desired beta angle, from the configuration data",
              "type": "float64",
              "unit": "deg"
            },
            "alpha_measured": {
              "name": "alpha_measured",
              "description": "The alpha angle measured by the FVC",
              "type": "float64",
              "unit": "deg"
            },
            "beta_measured": {
              "name": "beta_measured",
              "description": "The beta angle measured by the FVC",
              "type": "float64",
              "unit": "deg"
            },
            "transformation_valid": {
              "name": "transformation_valid",
              "description": "Whether the transformation between wok and positioner coordinates was successful",
              "type": "bool",
              "unit": ""
            },
            "alpha_offset": {
              "name": "alpha_offset",
              "description": "The difference between the expected and measured alpha angles",
              "type": "float64",
              "unit": "deg"
            },
            "beta_offset": {
              "name": "beta_offset",
              "description": "The difference between the expected and measured beta angles",
              "type": "float64",
              "unit": "deg"
            },
            "alpha_offset_corrected": {
              "name": "alpha_offset_corrected",
              "description": "The difference between the expected and measured alpha angles, after applying clipping limits. This is the applied offset.",
              "type": "float64",
              "unit": "deg"
            },
            "beta_offset_corrected": {
              "name": "beta_offset_corrected",
              "description": "The difference between the expected and measured beta angles, after applying clipping limits. This is the applied offset.",
              "type": "float64",
              "unit": "deg"
            },
            "alpha_new": {
              "name": "alpha_new",
              "description": "The new alpha angle commanded to the positioner firmware",
              "type": "float64",
              "unit": "deg"
            },
            "beta_new": {
              "name": "beta_new",
              "description": "The new beta angle commanded to the positioner firmware",
              "type": "float64",
              "unit": "deg"
            }
          }
        }
      },
      "par": null,
      "hdfs": null
    }
  },
  "notes": "FVC measurement methods continue to evolve overtime and so proc-fimg files from different dates may not exactly match this datamodel, which was built from an image from MJD 60648.  At somepoint we should reprocess them using the same software version.",
  "regrets": "I  have no regrets!"
}